# 安裝 & 啟動 docker
sudo yum install docker -y
sudo usermod -aG docker $USER && newgrp docker
sudo service docker start
docker ps

# 建立 Dockerfile

vi Dockerfile
=====
FROM alpine:3.14
WORKDIR /var/www/localhost/htdocs
RUN apk --update add apache2
RUN rm -rf /var/cache/apk/*
RUN echo "<h1>Application on K8S Demo <h1>" >> index.html
ENTRYPOINT ["httpd","-D","FOREGROUND"]
=====
cat Dockerfile

# 建立 Docker Image
docker build -t uopsdod/k8sgithub001 .
docker images

# 啟動 Docker Container
docker run -d -p 8081:80 --name k8sgithub001 uopsdod/k8sgithub001 
docker ps

# 檢查畫面
curl localhost:8081

# 關閉 Docker Container
docker stop k8sgithub001
docker rm k8sgithub001

# 上傳 image to Dockerhub
docker login
docker images
docker push uopsdod/k8sgithub001 

# check on Dockerhub
https://hub.docker.com/

----- - ----- - ----- 

# 建立 minikube cluster
minikube start --driver docker
minikube status

# 部署 deployments
kubectl create deployment k8sgithub001 --image=uopsdod/k8sgithub001
kubectl get deployments
kubectl get pods

# 開放 service 
kubectl expose deployment k8sgithub001 --port=80
kubectl get services

# 開放外界連線
kubectl port-forward service/k8sgithub001 8081:80 &
(enter)
curl localhost:8081

----- - ----- - ----- 

# 部署 deployments
kubectl create deployment k8s-hostname-001 --image=uopsdod/k8s-hostname-amd64-beta
kubectl get deployments
kubectl get pods

# 開放 service 
kubectl expose deployment k8s-hostname-001 --port=80
kubectl get services

# 開放外界連線
kubectl port-forward service/k8s-hostname-001 8082:80 &
(enter)
curl localhost:8082

# 取消外界連線
ps
kill [kubectl PID]
kill [kubectl PID]
(enter)
ps


----- - ----- - ----- 

# 刪除 service
kubectl get services
kubectl delete services --all

# 刪除 deployments
kubectl get deployments
kubectl delete deployment --all

# 刪除 cluster
minikube stop
minikube delete
minikube status

# 完成！

