
# 啟動 docker
sudo service docker start
docker ps

# 建立 cluster
minikube start --driver docker
minikube status

# 部署 deployment v1
cp advanced-deployment.yaml advanced-deployment-rollingupdate.yaml
cat advanced-deployment-rollingupdate.yaml
kubectl apply -f advanced-deployment-rollingupdate.yaml
kubectl get deployments
kubectl get rs

# 確認 pod image 版本 
kubectl get pods
kubectl describe pod [pod_id]

# 監控 rs 
(in a new browser tab)
kubectl get rs -w

# 建立 deployments v2
vi advanced-deployment-rollingupdate.yaml
- add strategy section
- change image version to v2
=====
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: app-pod
  template:
    metadata:
      labels:
        app: app-pod
    spec:
      containers:
      - name: app-container
        image: uopsdod/k8s-hostname-amd64-beta:v2
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        startupProbe:
          httpGet:
            path: /healthcheck
            port: 80
          initialDelaySeconds: 0
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 30
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 80
          initialDelaySeconds: 0
          timeoutSeconds: 1
          periodSeconds: 1
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthcheck_dependency
            port: 80
          initialDelaySeconds: 0
          timeoutSeconds: 1
          periodSeconds: 1
          successThreshold: 5
          failureThreshold: 7
=====
cat advanced-deployment-rollingupdate.yaml

# 部署 deployments v2
kubectl apply -f advanced-deployment-rollingupdate.yaml

# 監控 rs 
(in the new browser tab)
(copy/paste to note for analysis)
kubectl get rs

# 確認 pod image 版本 
kubectl get pods
kubectl describe pod [pod_id]
(check container image)

# 監控 rs 
kubectl get rs

# rollback
kubectl rollout history deployment/app-deployment
kubectl rollout undo deployment/app-deployment

# 確認 pod image 版本 
kubectl get pods
kubectl describe pod [pod_id]
(check container image)

# 資源清理
kubectl delete deployments --all

# 完成！









